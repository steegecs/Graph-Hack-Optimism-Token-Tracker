# Subgraph Schema: Tokens
# Version: 1.0.0

enum Network {
  ARBITRUM_ONE
  AURORA
  AVALANCHE
  BSC # aka BNB Chain
  CELO
  CRONOS
  MAINNET # Ethereum Mainnet
  FANTOM
  FUSE
  MOONBEAM
  MOONRIVER
  NEAR_MAINNET
  OPTIMISM
  MATIC # aka Polygon
  XDAI # aka Gnosis Chain
}

enum TransferType {
  MINT
  BURN
  TRANSFER
  UNKNOWN
}

enum TokenType {
  ERC20
  ERC20_LP
  ERC721
  ERC721_ENHANCED
}

type Token @entity {
  " Address of the Token "
  id: ID!

  " Network the token belongs to "
  network: Network!

  " Type of the token "
  type: TokenType!

  " Name of Token "
  name: String!

  " Token Symbol " 
  symbol: String!

  " Decimals "
  decimals: Int!

  " Total amount of tokens minted "
  cumulativeAmountMinted: BigDecimal!

  " Total amount of tokens burned "
  cumulativeAmountBurned: BigDecimal!

  " Total amount of tokens burned in USD "
  cumulativeAmountBurnedUSD: BigDecimal!

  " Total volume of tokens "
  cumulativeVolume: BigDecimal!

  " Total volume of tokens in USD"
  cumulativeVolumeUSD: BigDecimal!

  " Amount in circulation "
  circulatingAmount: BigDecimal!

  " Market Capitalization of the Token "
  marketCapitalization: BigDecimal!

  " amount in USD per token "
  lastPriceUSD: BigDecimal!

  " last price timestamp "
  lastPriceTimestamp: BigInt!

  " last price block number "
  lastPriceBlockNumber: BigInt!
}

type TokenDailySnapshot @entity {
  "{ Address of the Token }-{ # of days since Unix epoch time } "
  id: ID!

  " Network the token belongs to "
  network: Network!

  " Type of the token "
  type: TokenType!

  " Name of Token "
  name: String!

  " Token Symbol " 
  symbol: String!

  " Decimals "
  decimals: Int!

  " Total amount of tokens minted during the day "
  dailyAmountMinted: BigDecimal!

  " Total amount of tokens minted "
  cumulativeAmountMinted: BigDecimal!

  " Total amount burned in tokens during the day  "
  dailyAmountBurned: BigDecimal!

  " Total amount burned in tokens "
  cumulativeAmountBurned: BigDecimal!

  " Total amount of tokens burned in USD during the day  "
  dailyAmountBurnedUSD: BigDecimal!

  " Total amount of tokens burned in USD "
  cumulativeAmountBurnedUSD: BigDecimal!

  " Total volume of tokens during the day  "
  dailyVolume: BigDecimal!

  " Total volume of tokens "
  cumulativeVolume: BigDecimal!

  " Total volume of tokens in USD  during the day "
  dailyVolumeUSD: BigDecimal!
  
  " Total volume of tokens in USD "
  cumulativeVolumeUSD: BigDecimal!

  " amount of tokens in circulation "
  circulatingAmount: BigDecimal!

  " Market Capitalization of the Token "
  marketCapitalization: BigDecimal!

  " amount in USD per token "
  lastPriceUSD: BigDecimal!

  " last price timestamp "
  lastPriceTimestamp: BigInt!

  " last price block number "
  lastPriceBlockNumber: BigInt!
}

type TokenHourlySnapshot @entity {
  "{ Address of the Token }-{ # of hours since Unix epoch time } "
  id: ID!

  " Network the token belongs to "
  network: Network!

  " Type of the token "
  type: TokenType!

  " Name of Token "
  name: String!

  " Token Symbol " 
  symbol: String!

  " Decimals "
  decimals: Int!

  " Total amount of tokens minted during the hour "
  hourlyAmountMinted: BigDecimal!

  " Total amount of tokens minted "
  cumulativeAmountMinted: BigDecimal!

  " Total amount burned in tokens during the hour  "
  hourlyAmountBurned: BigDecimal!

  " Total amount burned in tokens "
  cumulativeAmountBurned: BigDecimal!

  " Total amount of tokens burned in USD during the hour  "
  hourlyAmountBurnedUSD: BigDecimal!

  " Total amount of tokens burned in USD "
  cumulativeAmountBurnedUSD: BigDecimal!

  " Total volume of tokens during the hour  "
  hourlyVolume: BigDecimal!

  " Total volume of tokens "
  cumulativeVolume: BigDecimal!

  " Total volume of tokens in USD  during the hour "
  hourlyVolumeUSD: BigDecimal!
  
  " Total volume of tokens in USD "
  cumulativeVolumeUSD: BigDecimal!

  " amount of tokens in circulation "
  circulatingAmount: BigDecimal!

  " Market Capitalization of the Token "
  marketCapitalization: BigDecimal!

  " amount in USD per token "
  lastPriceUSD: BigDecimal!

  " last price timestamp "
  lastPriceTimestamp: BigInt!

  " last price block number "
  lastPriceBlockNumber: BigInt!
}

type Account @entity {
  "{ Address of the account }-{ # of days since Unix epoch time } "
  id: ID!

  " Optimism "
  network: Network!

  " Optimism Token "
  token: Token!

  " balance in tokens "
  balance: BigDecimal!

  " Token Balance in USD "
  balanceUSD: BigDecimal!

  " Volume of the optimism token transfers "
  dailyVolume: BigDecimal!
  
  " Volume of the optimism token transfers "
  cumulativeVolume: BigDecimal!

" Volume of the optimism transfers in USD "
  cumulativeVolumeUSD: BigDecimal!

  " Count of inward transaction "
  cumulativeTransfersInCount: BigInt!

  " Count of outward transaction "
  cumulativeTransfersOutCount: BigInt!

  " last time the wallet was updated timestamp "
  timestamp: BigInt!

  " last time the wallet was updated block number "
  blockNumber: BigInt!
}

type AccountDailySnapshot @entity {
  " wallet address of an optimism token owner "
  id: ID!

  " Optimism "
  network: Network!

  " Optimism Token "
  token: Token!

  " balance "
  balance: BigDecimal!

  " Token Balance in USD "
  balanceUSD: BigDecimal!

  " Volume of the optimism transfer "
  dailyVolume: BigDecimal!

  " Cumulative volume of the optimism transfer in USD "
  cumulativeVolume: BigDecimal!

  " Volume of the optimism transfer in USD "
  dailyVolumeUSD: BigDecimal!

  " Cumulative volume of the optimism transfer in USD "
  cumulativeVolumeUSD: BigDecimal!

  " Count of inward transaction during the day "
  dailyTransfersInCount: BigInt!

  " Cumulative count of inward transaction "
  cumulativeTransfersInCount: BigInt!

  " Count of outward transaction during the day "
  dailyTransfersOutCount: BigInt!

  " Cumulative count of outward transaction "
  cumulativeTransfersOutCount: BigInt!

  " last time the wallet was updated timestamp "
  timestamp: BigInt!

  " last time the wallet was updated block number "
  blockNumber: BigInt!
}

type Transfer @entity {
  " id of the transfer transaction "
  id: ID!

  " Type of transfer "
  type: TransferType!

  " transaction hash "
  hash: String!

  " sender of optimism tokens "
  from: String!

  " receiver of optimism tokens "
  to: String!

  " amount of tokens transferred in tokens "
  amount: BigDecimal!

  " amount in USD of the transaction "
  amountUSD: BigDecimal!

  " timestamp of the transaction "
  timestamp: BigInt!

  " block number of the transaction "
  blockNumber: BigInt!
}

type _LiquidityPoolAmount @entity {
  " Smart contract address of the pool "
  id: ID!
  " Input tokens of the pool (not input tokens of the event/transaction). E.g. WETH and USDC from a WETH-USDC pool "
  inputTokens: [Token!]!
  " Amount of input tokens in the pool. The ordering should be the same as the pool's `inputTokens` field. "
  inputTokenBalances: [BigDecimal!]!

  tokenPrices: [BigDecimal!]!
}
